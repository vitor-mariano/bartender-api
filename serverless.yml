org: vitormariano
app: bartender
service: bartender
frameworkVersion: "3"

plugins:
  - serverless-plugin-typescript
  - serverless-domain-manager

custom:
  tableName: "orders-table-${sls:stage}"
  customDomain:
    domainName: api.bartender.dev.vitormariano.com
    certificateName: "bartender.dev.vitormariano.com"
    basePath: ""
    stage: ${sls:stage}
    createRoute53Record: true

provider:
  name: aws
  runtime: nodejs16.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [OrdersTable, Arn]
  environment:
    ORDERS_TABLE: ${self:custom.tableName}

functions:
  api:
    handler: src/handler.handler
    events:
      - http:
          path: /{any+}
          method: ANY

resources:
  Resources:
    OrdersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: orderId
            AttributeType: S
        KeySchema:
          - AttributeName: orderId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}
